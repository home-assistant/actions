name: 'Home Assistant helper: release-assets'
description: 'GitHub action helper: release-assets'
inputs:
  github-token:
    description: GITHUB_TOKEN with 'contents' write permission
    required: true
  folder:
    description: Folder for distribution packages
    required: false
    default: "dist/"
runs:
  using: "composite"
  steps:
    - name: Fail if not release event
      if: github.event_name != 'release'
      shell: bash
      run: |
        echo "::error::Action can only be run for 'release' events"
        echo "::error::Current event_name: ${{ github.event_name }}"
        exit 1
    - name: Get build file names
      id: file-names
      shell: bash
      run: |
        echo "::set-output name=sdist::$(ls ${{ inputs.folder }} | grep '.*.tar.gz' | tail -n 1)"
        echo "::set-output name=wheel::$(ls ${{ inputs.folder }} | grep '.*.whl' | tail -n 1)"
    - name: Check for existing assets
      id: existing-assets
      shell: bash
      run: |
        API_REQUEST=$(curl -sS \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ inputs.github-token }}" \
          ${{ github.event.release.assets_url }})
        FOUND_ASSETS=$(echo $API_REQUEST | jq ".[] .name")
        printf "Found release assets:\n$FOUND_ASSETS\n"
        if [[ $FOUND_ASSETS == *"${{ steps.file-names.outputs.sdist }}"* ]]; then
          echo "::set-output name=sdist-found::true"
        fi
        if [[ $FOUND_ASSETS == *"${{ steps.file-names.outputs.wheel }}"* ]]; then
          echo "::set-output name=wheel-found::true"
        fi
    - name: Create upload URL
      id: upload-url
      shell: bash
      run: |
        URL=$(echo "${{ github.event.release.upload_url }}" | sed "s/{.*}$//")
        echo "::set-output name=url::$URL"
    - name: Upload release asset (sdist)
      if: ${{ !steps.existing-assets.outputs.sdist-found }}
      shell: bash
      run: |
        curl -sS -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ inputs.github-token }}" \
          -H "Content-Type: application/gzip" \
          --data-binary @${{ inputs.folder }}${{ steps.file-names.outputs.sdist }} \
          ${{ steps.upload-url.outputs.url }}?name=${{ steps.file-names.outputs.sdist }}
    - name: Upload release asset (wheel)
      if: ${{ !steps.existing-assets.outputs.wheel-found }}
      shell: bash
      run: |
        curl -sS -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ inputs.github-token }}" \
          -H "Content-Type: application/zip" \
          --data-binary @${{ inputs.folder }}${{ steps.file-names.outputs.wheel }} \
          ${{ steps.upload-url.outputs.url }}?name=${{ steps.file-names.outputs.wheel }}
